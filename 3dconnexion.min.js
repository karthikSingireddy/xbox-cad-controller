/** @license AutobahnJS - http://autobahn.ws
 *
 * Copyright (C) 2011-2014 Tavendo GmbH.
 * Licensed under the MIT License.
 * See license text at http://www.opensource.org/licenses/mit-license.php
 *
 * AutobahnJS includes code from:
 *
 * when - http://cujojs.com
 *
 * (c) copyright B Cavalier & J Hann
 * Licensed under the MIT License at:
 * http://www.opensource.org/licenses/mit-license.php
 *
 * Crypto-JS - http://code.google.com/p/crypto-js/
 *
 * (c) 2009-2012 by Jeff Mott. All rights reserved.
 * Licensed under the New BSD License at:
 * http://code.google.com/p/crypto-js/wiki/License
 *
 * console-normalizer - https://github.com/Zenovations/console-normalizer
 *
 * (c) 2012 by Zenovations.
 * Licensed under the MIT License at:
 * http://www.opensource.org/licenses/mit-license.php
 *
 */
window.define ||
  ((window.define = function (e) {
    try {
      delete window.define;
    } catch (n) {
      window.define = void 0;
    }
    window.when = e();
  }),
  (window.define.amd = {})),
  (function (e) {
    e ||
      (e = window.console =
        {
          log: function (e, n, o, t, r) {},
          info: function (e, n, o, t, r) {},
          warn: function (e, n, o, t, r) {},
          error: function (e, n, o, t, r) {},
        }),
      Function.prototype.bind ||
        (Function.prototype.bind = function (e) {
          var n = this,
            o = Array.prototype.slice.call(arguments, 1);
          return function () {
            return n.apply(e, Array.prototype.concat.apply(o, arguments));
          };
        }),
      "object" == typeof e.log &&
        ((e.log = Function.prototype.call.bind(e.log, e)),
        (e.info = Function.prototype.call.bind(e.info, e)),
        (e.warn = Function.prototype.call.bind(e.warn, e)),
        (e.error = Function.prototype.call.bind(e.error, e))),
      "group" in e ||
        (e.group = function (n) {
          e.info("\n--- " + n + " ---\n");
        }),
      "groupEnd" in e ||
        (e.groupEnd = function () {
          e.log("\n");
        }),
      "time" in e ||
        (function () {
          var n = {};
          (e.time = function (e) {
            n[e] = new Date().getTime();
          }),
            (e.timeEnd = function (o) {
              var t = new Date().getTime(),
                r = o in n ? t - n[o] : 0;
              e.info(o + ": " + r + "ms");
            });
        })();
  })(
    window.console
  ) /** @license MIT License (c) copyright 2011-2013 original author or authors */,
  (function (e) {
    "use strict";
    e(function (e) {
      function n(e, n, o, t) {
        return r(e).then(n, o, t);
      }
      function o(e) {
        return new t(e, F.PromiseStatus && F.PromiseStatus());
      }
      function t(e, n) {
        function o() {
          return a ? a.inspect() : O();
        }
        function t(e, n, o, t, r) {
          function i(i) {
            i._when(e, n, o, t, r);
          }
          p
            ? p.push(i)
            : A(function () {
                i(a);
              });
        }
        function r(e) {
          if (p) {
            var o = p;
            (p = K),
              A(function () {
                (a = l(c, e)), n && _(a, n), u(o, a);
              });
          }
        }
        function i(e) {
          r(new f(e));
        }
        function s(e) {
          if (p) {
            var n = p;
            A(function () {
              u(n, new d(e));
            });
          }
        }
        var c,
          a,
          p = [];
        (c = this), (this._status = n), (this.inspect = o), (this._when = t);
        try {
          e(r, i, s);
        } catch (h) {
          i(h);
        }
      }
      function r(e) {
        return e instanceof t ? e : i(e);
      }
      function i(e) {
        return o(function (n) {
          n(e);
        });
      }
      function s(e) {
        return n(e, function (e) {
          return new f(e);
        });
      }
      function c() {
        function e(e, o, s) {
          (n.resolve = n.resolver.resolve =
            function (n) {
              return r ? i(n) : ((r = !0), e(n), t);
            }),
            (n.reject = n.resolver.reject =
              function (e) {
                return r ? i(new f(e)) : ((r = !0), o(e), t);
              }),
            (n.notify = n.resolver.notify =
              function (e) {
                return s(e), e;
              });
        }
        var n, t, r;
        return (
          (n = {
            promise: K,
            resolve: K,
            reject: K,
            notify: K,
            resolver: { resolve: K, reject: K, notify: K },
          }),
          (n.promise = t = o(e)),
          n
        );
      }
      function u(e, n) {
        for (var o = 0; o < e.length; o++) e[o](n);
      }
      function l(e, n) {
        if (n === e) return new f(new TypeError());
        if (n instanceof t) return n;
        try {
          var o = n === Object(n) && n.then;
          return "function" == typeof o ? a(o, n) : new p(n);
        } catch (r) {
          return new f(r);
        }
      }
      function a(e, n) {
        return o(function (o, t) {
          I(e, n, o, t);
        });
      }
      function p(e) {
        this.value = e;
      }
      function f(e) {
        this.value = e;
      }
      function d(e) {
        this.value = e;
      }
      function _(e, n) {
        function o() {
          n.fulfilled();
        }
        function t(e) {
          n.rejected(e);
        }
        e.then(o, t);
      }
      function h(e) {
        return e && "function" == typeof e.then;
      }
      function g(e, t, r, i, s) {
        return n(e, function (e) {
          function c(o, r, i) {
            function s(e) {
              d(e);
            }
            function c(e) {
              f(e);
            }
            var u, l, a, p, f, d, _, h;
            if (
              ((_ = e.length >>> 0),
              (u = Math.max(0, Math.min(t, _))),
              (a = []),
              (l = _ - u + 1),
              (p = []),
              u)
            )
              for (
                d = function (e) {
                  p.push(e), --l || ((f = d = k), r(p));
                },
                  f = function (e) {
                    a.push(e), --u || ((f = d = k), o(a));
                  },
                  h = 0;
                _ > h;
                ++h
              )
                h in e && n(e[h], c, s, i);
            else o(a);
          }
          return o(c).then(r, i, s);
        });
      }
      function b(e, n, o, t) {
        function r(e) {
          return n ? n(e[0]) : e[0];
        }
        return g(e, 1, r, o, t);
      }
      function v(e, n, o, t) {
        return S(e, k).then(n, o, t);
      }
      function w() {
        return S(arguments, k);
      }
      function E(e) {
        return S(e, m, C);
      }
      function y(e, n) {
        return S(e, n);
      }
      function S(e, o, r) {
        return n(e, function (e) {
          function i(t, i, s) {
            function c(e, c) {
              n(e, o, r).then(
                function (e) {
                  (u[c] = e), --a || t(u);
                },
                i,
                s
              );
            }
            var u, l, a, p;
            if (((a = l = e.length >>> 0), (u = []), !a)) return void t(u);
            for (p = 0; l > p; p++) p in e ? c(e[p], p) : --a;
          }
          return new t(i);
        });
      }
      function x(e, o) {
        var t = I(D, arguments, 1);
        return n(e, function (e) {
          var r;
          return (
            (r = e.length),
            (t[0] = function (e, t, i) {
              return n(e, function (e) {
                return n(t, function (n) {
                  return o(e, n, i, r);
                });
              });
            }),
            T.apply(e, t)
          );
        });
      }
      function m(e) {
        return { state: "fulfilled", value: e };
      }
      function C(e) {
        return { state: "rejected", reason: e };
      }
      function O() {
        return { state: "pending" };
      }
      function A(e) {
        1 === B.push(e) && U(N);
      }
      function N() {
        u(B), (B = []);
      }
      function k(e) {
        return e;
      }
      function M(e) {
        throw (
          ("function" == typeof F.reportUnhandled
            ? F.reportUnhandled()
            : A(function () {
                throw e;
              }),
          e)
        );
      }
      (n.promise = o),
        (n.resolve = i),
        (n.reject = s),
        (n.defer = c),
        (n.join = w),
        (n.all = v),
        (n.map = y),
        (n.reduce = x),
        (n.settle = E),
        (n.any = b),
        (n.some = g),
        (n.isPromise = h),
        (n.isPromiseLike = h),
        (P = t.prototype),
        (P.then = function (e, n, o) {
          var r = this;
          return new t(function (t, i, s) {
            r._when(t, s, e, n, o);
          }, this._status && this._status.observed());
        }),
        (P["catch"] = P.otherwise =
          function (e) {
            return this.then(K, e);
          }),
        (P["finally"] = P.ensure =
          function (e) {
            function n() {
              return i(e());
            }
            return "function" == typeof e
              ? this.then(n, n)["yield"](this)
              : this;
          }),
        (P.done = function (e, n) {
          this.then(e, n)["catch"](M);
        }),
        (P["yield"] = function (e) {
          return this.then(function () {
            return e;
          });
        }),
        (P.tap = function (e) {
          return this.then(e)["yield"](this);
        }),
        (P.spread = function (e) {
          return this.then(function (n) {
            return v(n, function (n) {
              return e.apply(K, n);
            });
          });
        }),
        (P.always = function (e, n) {
          return this.then(e, e, n);
        }),
        (R =
          Object.create ||
          function (e) {
            function n() {}
            return (n.prototype = e), new n();
          }),
        (p.prototype = R(P)),
        (p.prototype.inspect = function () {
          return m(this.value);
        }),
        (p.prototype._when = function (e, n, o) {
          try {
            e("function" == typeof o ? o(this.value) : this.value);
          } catch (t) {
            e(new f(t));
          }
        }),
        (f.prototype = R(P)),
        (f.prototype.inspect = function () {
          return C(this.value);
        }),
        (f.prototype._when = function (e, n, o, t) {
          try {
            e("function" == typeof t ? t(this.value) : this);
          } catch (r) {
            e(new f(r));
          }
        }),
        (d.prototype = R(P)),
        (d.prototype._when = function (e, n, o, t, r) {
          try {
            n("function" == typeof r ? r(this.value) : this.value);
          } catch (i) {
            n(i);
          }
        });
      var P, R, T, D, I, U, B, L, H, W, F, j, G, Y, K;
      if (
        ((G = e),
        (B = []),
        (F = "undefined" != typeof console ? console : n),
        "object" == typeof process && process.nextTick)
      )
        U = process.nextTick;
      else if (
        (Y =
          ("function" == typeof MutationObserver && MutationObserver) ||
          ("function" == typeof WebKitMutationObserver &&
            WebKitMutationObserver))
      )
        U = (function (e, n, o) {
          var t = e.createElement("div");
          return (
            new n(o).observe(t, { attributes: !0 }),
            function () {
              t.setAttribute("x", "x");
            }
          );
        })(document, Y, N);
      else
        try {
          U = G("vertx").runOnLoop || G("vertx").runOnContext;
        } catch (z) {
          (j = setTimeout),
            (U = function (e) {
              j(e, 0);
            });
        }
      return (
        (L = Function.prototype),
        (H = L.call),
        (I = L.bind
          ? H.bind(H)
          : function (e, n) {
              return e.apply(n, D.call(arguments, 2));
            }),
        (W = []),
        (D = W.slice),
        (T =
          W.reduce ||
          function (e) {
            var n, o, t, r, i;
            if (
              ((i = 0),
              (n = Object(this)),
              (r = n.length >>> 0),
              (o = arguments),
              o.length <= 1)
            )
              for (;;) {
                if (i in n) {
                  t = n[i++];
                  break;
                }
                if (++i >= r) throw new TypeError();
              }
            else t = o[1];
            for (; r > i; ++i) i in n && (t = e(t, n[i], i, n));
            return t;
          }),
        n
      );
    });
  })(
    "function" == typeof define && define.amd
      ? define
      : function (e) {
          module.exports = e(require);
        }
  );
var CryptoJS =
  CryptoJS ||
  (function (e, n) {
    var o = {},
      t = (o.lib = {}),
      r = (t.Base = (function () {
        function e() {}
        return {
          extend: function (n) {
            e.prototype = this;
            var o = new e();
            return (
              n && o.mixIn(n),
              o.hasOwnProperty("init") ||
                (o.init = function () {
                  o.$super.init.apply(this, arguments);
                }),
              (o.init.prototype = o),
              (o.$super = this),
              o
            );
          },
          create: function () {
            var e = this.extend();
            return e.init.apply(e, arguments), e;
          },
          init: function () {},
          mixIn: function (e) {
            for (var n in e) e.hasOwnProperty(n) && (this[n] = e[n]);
            e.hasOwnProperty("toString") && (this.toString = e.toString);
          },
          clone: function () {
            return this.init.prototype.extend(this);
          },
        };
      })()),
      i = (t.WordArray = r.extend({
        init: function (e, o) {
          (e = this.words = e || []),
            o != n ? (this.sigBytes = o) : (this.sigBytes = 4 * e.length);
        },
        toString: function (e) {
          return (e || c).stringify(this);
        },
        concat: function (e) {
          var n = this.words,
            o = e.words,
            t = this.sigBytes,
            r = e.sigBytes;
          if ((this.clamp(), t % 4))
            for (var i = 0; r > i; i++) {
              var s = (o[i >>> 2] >>> (24 - (i % 4) * 8)) & 255;
              n[(t + i) >>> 2] |= s << (24 - ((t + i) % 4) * 8);
            }
          else if (o.length > 65535)
            for (var i = 0; r > i; i += 4) n[(t + i) >>> 2] = o[i >>> 2];
          else n.push.apply(n, o);
          return (this.sigBytes += r), this;
        },
        clamp: function () {
          var n = this.words,
            o = this.sigBytes;
          (n[o >>> 2] &= 4294967295 << (32 - (o % 4) * 8)),
            (n.length = e.ceil(o / 4));
        },
        clone: function () {
          var e = r.clone.call(this);
          return (e.words = this.words.slice(0)), e;
        },
        random: function (n) {
          for (var o = [], t = 0; n > t; t += 4)
            o.push((4294967296 * e.random()) | 0);
          return new i.init(o, n);
        },
      })),
      s = (o.enc = {}),
      c = (s.Hex = {
        stringify: function (e) {
          for (var n = e.words, o = e.sigBytes, t = [], r = 0; o > r; r++) {
            var i = (n[r >>> 2] >>> (24 - (r % 4) * 8)) & 255;
            t.push((i >>> 4).toString(16)), t.push((15 & i).toString(16));
          }
          return t.join("");
        },
        parse: function (e) {
          for (var n = e.length, o = [], t = 0; n > t; t += 2)
            o[t >>> 3] |= parseInt(e.substr(t, 2), 16) << (24 - (t % 8) * 4);
          return new i.init(o, n / 2);
        },
      }),
      u = (s.Latin1 = {
        stringify: function (e) {
          for (var n = e.words, o = e.sigBytes, t = [], r = 0; o > r; r++) {
            var i = (n[r >>> 2] >>> (24 - (r % 4) * 8)) & 255;
            t.push(String.fromCharCode(i));
          }
          return t.join("");
        },
        parse: function (e) {
          for (var n = e.length, o = [], t = 0; n > t; t++)
            o[t >>> 2] |= (255 & e.charCodeAt(t)) << (24 - (t % 4) * 8);
          return new i.init(o, n);
        },
      }),
      l = (s.Utf8 = {
        stringify: function (e) {
          try {
            return decodeURIComponent(escape(u.stringify(e)));
          } catch (n) {
            throw new Error("Malformed UTF-8 data");
          }
        },
        parse: function (e) {
          return u.parse(unescape(encodeURIComponent(e)));
        },
      }),
      a = (t.BufferedBlockAlgorithm = r.extend({
        reset: function () {
          (this._data = new i.init()), (this._nDataBytes = 0);
        },
        _append: function (e) {
          "string" == typeof e && (e = l.parse(e)),
            this._data.concat(e),
            (this._nDataBytes += e.sigBytes);
        },
        _process: function (n) {
          var o = this._data,
            t = o.words,
            r = o.sigBytes,
            s = this.blockSize,
            c = 4 * s,
            u = r / c;
          u = n ? e.ceil(u) : e.max((0 | u) - this._minBufferSize, 0);
          var l = u * s,
            a = e.min(4 * l, r);
          if (l) {
            for (var p = 0; l > p; p += s) this._doProcessBlock(t, p);
            var f = t.splice(0, l);
            o.sigBytes -= a;
          }
          return new i.init(f, a);
        },
        clone: function () {
          var e = r.clone.call(this);
          return (e._data = this._data.clone()), e;
        },
        _minBufferSize: 0,
      })),
      p =
        ((t.Hasher = a.extend({
          cfg: r.extend(),
          init: function (e) {
            (this.cfg = this.cfg.extend(e)), this.reset();
          },
          reset: function () {
            a.reset.call(this), this._doReset();
          },
          update: function (e) {
            return this._append(e), this._process(), this;
          },
          finalize: function (e) {
            e && this._append(e);
            var n = this._doFinalize();
            return n;
          },
          blockSize: 16,
          _createHelper: function (e) {
            return function (n, o) {
              return new e.init(o).finalize(n);
            };
          },
          _createHmacHelper: function (e) {
            return function (n, o) {
              return new p.HMAC.init(e, o).finalize(n);
            };
          },
        })),
        (o.algo = {}));
    return o;
  })(Math);
!(function () {
  var e = CryptoJS,
    n = e.lib,
    o = n.WordArray,
    t = e.enc;
  t.Base64 = {
    stringify: function (e) {
      var n = e.words,
        o = e.sigBytes,
        t = this._map;
      e.clamp();
      for (var r = [], i = 0; o > i; i += 3)
        for (
          var s = (n[i >>> 2] >>> (24 - (i % 4) * 8)) & 255,
            c = (n[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 255,
            u = (n[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 255,
            l = (s << 16) | (c << 8) | u,
            a = 0;
          4 > a && o > i + 0.75 * a;
          a++
        )
          r.push(t.charAt((l >>> (6 * (3 - a))) & 63));
      var p = t.charAt(64);
      if (p) for (; r.length % 4; ) r.push(p);
      return r.join("");
    },
    parse: function (e) {
      var n = e.length,
        t = this._map,
        r = t.charAt(64);
      if (r) {
        var i = e.indexOf(r);
        -1 != i && (n = i);
      }
      for (var s = [], c = 0, u = 0; n > u; u++)
        if (u % 4) {
          var l = t.indexOf(e.charAt(u - 1)) << ((u % 4) * 2),
            a = t.indexOf(e.charAt(u)) >>> (6 - (u % 4) * 2);
          (s[c >>> 2] |= (l | a) << (24 - (c % 4) * 8)), c++;
        }
      return o.create(s, c);
    },
    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  };
})(),
  (function () {
    var e = CryptoJS,
      n = e.lib,
      o = n.Base,
      t = e.enc,
      r = t.Utf8,
      i = e.algo;
    i.HMAC = o.extend({
      init: function (e, n) {
        (e = this._hasher = new e.init()),
          "string" == typeof n && (n = r.parse(n));
        var o = e.blockSize,
          t = 4 * o;
        n.sigBytes > t && (n = e.finalize(n)), n.clamp();
        for (
          var i = (this._oKey = n.clone()),
            s = (this._iKey = n.clone()),
            c = i.words,
            u = s.words,
            l = 0;
          o > l;
          l++
        )
          (c[l] ^= 1549556828), (u[l] ^= 909522486);
        (i.sigBytes = s.sigBytes = t), this.reset();
      },
      reset: function () {
        var e = this._hasher;
        e.reset(), e.update(this._iKey);
      },
      update: function (e) {
        return this._hasher.update(e), this;
      },
      finalize: function (e) {
        var n = this._hasher,
          o = n.finalize(e);
        n.reset();
        var t = n.finalize(this._oKey.clone().concat(o));
        return t;
      },
    });
  })(),
  (function (e) {
    var n = CryptoJS,
      o = n.lib,
      t = o.WordArray,
      r = o.Hasher,
      i = n.algo,
      s = [],
      c = [];
    !(function () {
      function n(n) {
        for (var o = e.sqrt(n), t = 2; o >= t; t++) if (!(n % t)) return !1;
        return !0;
      }
      function o(e) {
        return (4294967296 * (e - (0 | e))) | 0;
      }
      for (var t = 2, r = 0; 64 > r; )
        n(t) &&
          (8 > r && (s[r] = o(e.pow(t, 0.5))),
          (c[r] = o(e.pow(t, 1 / 3))),
          r++),
          t++;
    })();
    var u = [],
      l = (i.SHA256 = r.extend({
        _doReset: function () {
          this._hash = new t.init(s.slice(0));
        },
        _doProcessBlock: function (e, n) {
          for (
            var o = this._hash.words,
              t = o[0],
              r = o[1],
              i = o[2],
              s = o[3],
              l = o[4],
              a = o[5],
              p = o[6],
              f = o[7],
              d = 0;
            64 > d;
            d++
          ) {
            if (16 > d) u[d] = 0 | e[n + d];
            else {
              var _ = u[d - 15],
                h =
                  ((_ << 25) | (_ >>> 7)) ^
                  ((_ << 14) | (_ >>> 18)) ^
                  (_ >>> 3),
                g = u[d - 2],
                b =
                  ((g << 15) | (g >>> 17)) ^
                  ((g << 13) | (g >>> 19)) ^
                  (g >>> 10);
              u[d] = h + u[d - 7] + b + u[d - 16];
            }
            var v = (l & a) ^ (~l & p),
              w = (t & r) ^ (t & i) ^ (r & i),
              E =
                ((t << 30) | (t >>> 2)) ^
                ((t << 19) | (t >>> 13)) ^
                ((t << 10) | (t >>> 22)),
              y =
                ((l << 26) | (l >>> 6)) ^
                ((l << 21) | (l >>> 11)) ^
                ((l << 7) | (l >>> 25)),
              S = f + y + v + c[d] + u[d],
              x = E + w;
            (f = p),
              (p = a),
              (a = l),
              (l = (s + S) | 0),
              (s = i),
              (i = r),
              (r = t),
              (t = (S + x) | 0);
          }
          (o[0] = (o[0] + t) | 0),
            (o[1] = (o[1] + r) | 0),
            (o[2] = (o[2] + i) | 0),
            (o[3] = (o[3] + s) | 0),
            (o[4] = (o[4] + l) | 0),
            (o[5] = (o[5] + a) | 0),
            (o[6] = (o[6] + p) | 0),
            (o[7] = (o[7] + f) | 0);
        },
        _doFinalize: function () {
          var n = this._data,
            o = n.words,
            t = 8 * this._nDataBytes,
            r = 8 * n.sigBytes;
          return (
            (o[r >>> 5] |= 128 << (24 - (r % 32))),
            (o[(((r + 64) >>> 9) << 4) + 14] = e.floor(t / 4294967296)),
            (o[(((r + 64) >>> 9) << 4) + 15] = t),
            (n.sigBytes = 4 * o.length),
            this._process(),
            this._hash
          );
        },
        clone: function () {
          var e = r.clone.call(this);
          return (e._hash = this._hash.clone()), e;
        },
      }));
    (n.SHA256 = r._createHelper(l)), (n.HmacSHA256 = r._createHmacHelper(l));
  })(Math),
  (function () {
    var e = CryptoJS,
      n = e.lib,
      o = n.Base,
      t = n.WordArray,
      r = e.algo,
      i = r.SHA1,
      s = r.HMAC,
      c = (r.PBKDF2 = o.extend({
        cfg: o.extend({ keySize: 4, hasher: i, iterations: 1 }),
        init: function (e) {
          this.cfg = this.cfg.extend(e);
        },
        compute: function (e, n) {
          for (
            var o = this.cfg,
              r = s.create(o.hasher, e),
              i = t.create(),
              c = t.create([1]),
              u = i.words,
              l = c.words,
              a = o.keySize,
              p = o.iterations;
            u.length < a;

          ) {
            var f = r.update(n).finalize(c);
            r.reset();
            for (var d = f.words, _ = d.length, h = f, g = 1; p > g; g++) {
              (h = r.finalize(h)), r.reset();
              for (var b = h.words, v = 0; _ > v; v++) d[v] ^= b[v];
            }
            i.concat(f), l[0]++;
          }
          return (i.sigBytes = 4 * a), i;
        },
      }));
    e.PBKDF2 = function (e, n, o) {
      return c.create(o).compute(e, n);
    };
  })(); /** @license MIT License (c) 2011-2013 Copyright Tavendo GmbH. */
var AUTOBAHNJS_VERSION = "?.?.?",
  global = this;
!(function (e, n) {
  "function" == typeof define && define.amd
    ? define(["when"], function (o) {
        return (e.ab = n(e, o));
      })
    : "undefined" != typeof exports
    ? "undefined" != typeof module &&
      module.exports &&
      (exports = module.exports = n(e, e.when))
    : (e.ab = n(e, e.when));
})(global, function (e, n) {
  "use strict";
  var o = {};
  return (
    (o._version = AUTOBAHNJS_VERSION),
    (function () {
      Array.prototype.indexOf ||
        (Array.prototype.indexOf = function (e) {
          if (null === this) throw new TypeError();
          var n = new Object(this),
            o = n.length >>> 0;
          if (0 === o) return -1;
          var t = 0;
          if (
            (arguments.length > 0 &&
              ((t = Number(arguments[1])),
              t !== t
                ? (t = 0)
                : 0 !== t &&
                  t !== 1 / 0 &&
                  t !== -(1 / 0) &&
                  (t = (t > 0 || -1) * Math.floor(Math.abs(t)))),
            t >= o)
          )
            return -1;
          for (var r = t >= 0 ? t : Math.max(o - Math.abs(t), 0); o > r; r++)
            if (r in n && n[r] === e) return r;
          return -1;
        }),
        Array.prototype.forEach ||
          (Array.prototype.forEach = function (e, n) {
            var o, t;
            if (null === this)
              throw new TypeError(" this is null or not defined");
            var r = new Object(this),
              i = r.length >>> 0;
            if ("[object Function]" !== {}.toString.call(e))
              throw new TypeError(e + " is not a function");
            for (n && (o = n), t = 0; i > t; ) {
              var s;
              t in r && ((s = r[t]), e.call(o, s, t, r)), t++;
            }
          });
    })(),
    (o._sliceUserAgent = function (e, n, o) {
      var t = [],
        r = navigator.userAgent,
        i = r.indexOf(e),
        s = r.indexOf(n, i);
      0 > s && (s = r.length);
      for (
        var c = r.slice(i, s).split(o), u = c[1].split("."), l = 0;
        l < u.length;
        ++l
      )
        t.push(parseInt(u[l], 10));
      return { name: c[0], version: t };
    }),
    (o.getBrowser = function () {
      var e = navigator.userAgent;
      return e.indexOf("Chrome") > -1
        ? o._sliceUserAgent("Chrome", " ", "/")
        : e.indexOf("Safari") > -1
        ? o._sliceUserAgent("Safari", " ", "/")
        : e.indexOf("Firefox") > -1
        ? o._sliceUserAgent("Firefox", " ", "/")
        : e.indexOf("MSIE") > -1
        ? o._sliceUserAgent("MSIE", ";", " ")
        : null;
    }),
    (o.getServerUrl = function (n, o) {
      if ("file:" === e.location.protocol) return o ? o : "ws://127.0.0.1/ws";
      var t = "https:" === e.location.protocol ? "wss://" : "ws://",
        r = "" !== e.location.port ? ":" + e.location.port : "",
        i = n ? n : "ws";
      return t + e.location.hostname + r + "/" + i;
    }),
    (o.browserNotSupportedMessage =
      "Browser does not support WebSockets (RFC6455)"),
    (o.deriveKey = function (e, n) {
      if (n && n.salt) {
        var o = n.salt,
          t = n.keylen || 32,
          r = n.iterations || 1e4,
          i = CryptoJS.PBKDF2(e, o, {
            keySize: t / 4,
            iterations: r,
            hasher: CryptoJS.algo.SHA256,
          });
        return i.toString(CryptoJS.enc.Base64);
      }
      return e;
    }),
    (o._idchars =
      "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"),
    (o._idlen = 16),
    (o._subprotocol = "wamp"),
    (o._newid = function () {
      for (var e = "", n = 0; n < o._idlen; n += 1)
        e += o._idchars.charAt(Math.floor(Math.random() * o._idchars.length));
      return e;
    }),
    (o._newidFast = function () {
      return Math.random().toString(36);
    }),
    (o.log = function () {
      if (arguments.length > 1) {
        console.group("Log Item");
        for (var e = 0; e < arguments.length; e += 1) console.log(arguments[e]);
        console.groupEnd();
      } else console.log(arguments[0]);
    }),
    (o._debugrpc = !1),
    (o._debugpubsub = !1),
    (o._debugws = !1),
    (o._debugconnect = !1),
    (o.debug = function (n, t, r) {
      if (!("console" in e)) throw "browser does not support console object";
      (o._debugrpc = n),
        (o._debugpubsub = n),
        (o._debugws = t),
        (o._debugconnect = r);
    }),
    (o.version = function () {
      return o._version;
    }),
    (o.PrefixMap = function () {
      var e = this;
      (e._index = {}), (e._rindex = {});
    }),
    (o.PrefixMap.prototype.get = function (e) {
      var n = this;
      return n._index[e];
    }),
    (o.PrefixMap.prototype.set = function (e, n) {
      var o = this;
      (o._index[e] = n), (o._rindex[n] = e);
    }),
    (o.PrefixMap.prototype.setDefault = function (e) {
      var n = this;
      (n._index[""] = e), (n._rindex[e] = "");
    }),
    (o.PrefixMap.prototype.remove = function (e) {
      var n = this,
        o = n._index[e];
      o && (delete n._index[e], delete n._rindex[o]);
    }),
    (o.PrefixMap.prototype.resolve = function (e, n) {
      var o = this,
        t = e.indexOf(":");
      if (t >= 0) {
        var r = e.substring(0, t);
        if (o._index[r]) return o._index[r] + e.substring(t + 1);
      }
      return n === !0 ? e : null;
    }),
    (o.PrefixMap.prototype.shrink = function (e, n) {
      for (var o = this, t = e.length; t > 0; t -= 1) {
        var r = e.substring(0, t),
          i = o._rindex[r];
        if (i) return i + ":" + e.substring(t);
      }
      return n === !0 ? e : null;
    }),
    (o._MESSAGE_TYPEID_WELCOME = 0),
    (o._MESSAGE_TYPEID_PREFIX = 1),
    (o._MESSAGE_TYPEID_CALL = 2),
    (o._MESSAGE_TYPEID_CALL_RESULT = 3),
    (o._MESSAGE_TYPEID_CALL_ERROR = 4),
    (o._MESSAGE_TYPEID_SUBSCRIBE = 5),
    (o._MESSAGE_TYPEID_UNSUBSCRIBE = 6),
    (o._MESSAGE_TYPEID_PUBLISH = 7),
    (o._MESSAGE_TYPEID_EVENT = 8),
    (o.CONNECTION_CLOSED = 0),
    (o.CONNECTION_LOST = 1),
    (o.CONNECTION_RETRIES_EXCEEDED = 2),
    (o.CONNECTION_UNREACHABLE = 3),
    (o.CONNECTION_UNSUPPORTED = 4),
    (o.CONNECTION_UNREACHABLE_SCHEDULED_RECONNECT = 5),
    (o.CONNECTION_LOST_SCHEDULED_RECONNECT = 6),
    (o.Deferred = n.defer),
    (o._construct = function (n, o) {
      console.log(n, o);
      return "WebSocket" in e
        ? o
          ? new WebSocket(n, o)
          : new WebSocket(n)
        : "MozWebSocket" in e
        ? o
          ? new MozWebSocket(n, o)
          : new MozWebSocket(n)
        : null;
    }),
    (o.Session = function (e, n, t, r) {
      var i = this;
      if (
        ((i._wsuri = e),
        (i._options = r),
        (i._websocket_onopen = n),
        (i._websocket_onclose = t),
        (i._websocket = null),
        (i._websocket_connected = !1),
        (i._session_id = null),
        (i._wamp_version = null),
        (i._server = null),
        (i._calls = {}),
        (i._subscriptions = {}),
        (i._prefixes = new o.PrefixMap()),
        (i._txcnt = 0),
        (i._rxcnt = 0),
        i._options && i._options.skipSubprotocolAnnounce
          ? (i._websocket = o._construct(i._wsuri))
          : (i._websocket = o._construct(i._wsuri, [o._subprotocol])),
        !i._websocket)
      ) {
        if (void 0 !== t) return void t(o.CONNECTION_UNSUPPORTED);
        throw o.browserNotSupportedMessage;
      }
      (i._websocket.onmessage = function (e) {
        o._debugws &&
          ((i._rxcnt += 1),
          console.group("WS Receive"),
          console.info(i._wsuri + "  [" + i._session_id + "]"),
          console.log(i._rxcnt),
          console.log(e.data),
          console.groupEnd());
        var n = JSON.parse(e.data);
        if (n[1] in i._calls) {
          if (n[0] === o._MESSAGE_TYPEID_CALL_RESULT) {
            var t = i._calls[n[1]],
              r = n[2];
            if (o._debugrpc && void 0 !== t._ab_callobj) {
              console.group("WAMP Call", t._ab_callobj[2]),
                console.timeEnd(t._ab_tid),
                console.group("Arguments");
              for (var s = 3; s < t._ab_callobj.length; s += 1) {
                var c = t._ab_callobj[s];
                if (void 0 === c) break;
                console.log(c);
              }
              console.groupEnd(),
                console.group("Result"),
                console.log(r),
                console.groupEnd(),
                console.groupEnd();
            }
            t.resolve(r);
          } else if (n[0] === o._MESSAGE_TYPEID_CALL_ERROR) {
            var u = i._calls[n[1]],
              l = n[2],
              a = n[3],
              p = n[4];
            if (o._debugrpc && void 0 !== u._ab_callobj) {
              console.group("WAMP Call", u._ab_callobj[2]),
                console.timeEnd(u._ab_tid),
                console.group("Arguments");
              for (var f = 3; f < u._ab_callobj.length; f += 1) {
                var d = u._ab_callobj[f];
                if (void 0 === d) break;
                console.log(d);
              }
              console.groupEnd(),
                console.group("Error"),
                console.log(l),
                console.log(a),
                void 0 !== p && console.log(p),
                console.groupEnd(),
                console.groupEnd();
            }
            void 0 !== p
              ? u.reject({ uri: l, desc: a, detail: p })
              : u.reject({ uri: l, desc: a });
          }
          delete i._calls[n[1]];
        } else if (n[0] === o._MESSAGE_TYPEID_EVENT) {
          var _ = i._prefixes.resolve(n[1], !0);
          if (_ in i._subscriptions) {
            var h = n[1],
              g = n[2];
            o._debugpubsub &&
              (console.group("WAMP Event"),
              console.info(i._wsuri + "  [" + i._session_id + "]"),
              console.log(h),
              console.log(g),
              console.groupEnd()),
              i._subscriptions[_].forEach(function (e) {
                e(h, g);
              });
          }
        } else if (n[0] === o._MESSAGE_TYPEID_WELCOME) {
          if (null !== i._session_id)
            throw "protocol error (welcome message received more than once)";
          (i._session_id = n[1]),
            (i._wamp_version = n[2]),
            (i._server = n[3]),
            (o._debugrpc || o._debugpubsub) &&
              (console.group("WAMP Welcome"),
              console.info(i._wsuri + "  [" + i._session_id + "]"),
              console.log(i._wamp_version),
              console.log(i._server),
              console.groupEnd()),
            null !== i._websocket_onopen && i._websocket_onopen();
        }
      }),
        (i._websocket.onopen = function (e) {
          if (i._websocket.protocol !== o._subprotocol)
            if ("undefined" == typeof i._websocket.protocol)
              o._debugws &&
                (console.group("WS Warning"),
                console.info(i._wsuri),
                console.log(
                  "WebSocket object has no protocol attribute: WAMP subprotocol check skipped!"
                ),
                console.groupEnd());
            else {
              if (!i._options || !i._options.skipSubprotocolCheck)
                throw (
                  (i._websocket.close(1e3, "server does not speak WAMP"),
                  "server does not speak WAMP (but '" +
                    i._websocket.protocol +
                    "' !)")
                );
              o._debugws &&
                (console.group("WS Warning"),
                console.info(i._wsuri),
                console.log(
                  "Server does not speak WAMP, but subprotocol check disabled by option!"
                ),
                console.log(i._websocket.protocol),
                console.groupEnd());
            }
          o._debugws &&
            (console.group("WAMP Connect"),
            console.info(i._wsuri),
            console.log(i._websocket.protocol),
            console.groupEnd()),
            (i._websocket_connected = !0);
        }),
        (i._websocket.onerror = function (e) {}),
        (i._websocket.onclose = function (e) {
          o._debugws &&
            (i._websocket_connected
              ? console.log(
                  "Autobahn connection to " +
                    i._wsuri +
                    " lost (code " +
                    e.code +
                    ", reason '" +
                    e.reason +
                    "', wasClean " +
                    e.wasClean +
                    ")."
                )
              : console.log(
                  "Autobahn could not connect to " +
                    i._wsuri +
                    " (code " +
                    e.code +
                    ", reason '" +
                    e.reason +
                    "', wasClean " +
                    e.wasClean +
                    ")."
                )),
            void 0 !== i._websocket_onclose &&
              (i._websocket_connected
                ? e.wasClean
                  ? i._websocket_onclose(
                      o.CONNECTION_CLOSED,
                      "WS-" + e.code + ": " + e.reason
                    )
                  : i._websocket_onclose(o.CONNECTION_LOST)
                : i._websocket_onclose(o.CONNECTION_UNREACHABLE)),
            (i._websocket_connected = !1),
            (i._wsuri = null),
            (i._websocket_onopen = null),
            (i._websocket_onclose = null),
            (i._websocket = null);
        }),
        (i.log = function () {
          i._options && "sessionIdent" in i._options
            ? console.group(
                "WAMP Session '" +
                  i._options.sessionIdent +
                  "' [" +
                  i._session_id +
                  "]"
              )
            : console.group("WAMP Session [" + i._session_id + "]");
          for (var e = 0; e < arguments.length; ++e) console.log(arguments[e]);
          console.groupEnd();
        });
    }),
    (o.Session.prototype._send = function (n) {
      var t = this;
      if (!t._websocket_connected) throw "Autobahn not connected";
      var r;
      switch (!0) {
        case e.Prototype && "undefined" == typeof top.root.__prototype_deleted:
        case "function" == typeof n.toJSON:
          r = n.toJSON();
          break;
        default:
          r = JSON.stringify(n);
      }
      t._websocket.send(r),
        (t._txcnt += 1),
        o._debugws &&
          (console.group("WS Send"),
          console.info(t._wsuri + "  [" + t._session_id + "]"),
          console.log(t._txcnt),
          console.log(r),
          console.groupEnd());
    }),
    (o.Session.prototype.close = function () {
      var e = this;
      e._websocket_connected && e._websocket.close();
    }),
    (o.Session.prototype.sessionid = function () {
      var e = this;
      return e._session_id;
    }),
    (o.Session.prototype.wsuri = function () {
      var e = this;
      return e._wsuri;
    }),
    (o.Session.prototype.shrink = function (e, n) {
      var o = this;
      return void 0 === n && (n = !0), o._prefixes.shrink(e, n);
    }),
    (o.Session.prototype.resolve = function (e, n) {
      var o = this;
      return void 0 === n && (n = !0), o._prefixes.resolve(e, n);
    }),
    (o.Session.prototype.prefix = function (e, n) {
      var t = this;
      t._prefixes.set(e, n),
        (o._debugrpc || o._debugpubsub) &&
          (console.group("WAMP Prefix"),
          console.info(t._wsuri + "  [" + t._session_id + "]"),
          console.log(e),
          console.log(n),
          console.groupEnd());
      var r = [o._MESSAGE_TYPEID_PREFIX, e, n];
      t._send(r);
    }),
    (o.Session.prototype.call = function () {
      for (var e, n = this, t = new o.Deferred(); ; )
        if (((e = o._newidFast()), !(e in n._calls))) break;
      n._calls[e] = t;
      for (
        var r = n._prefixes.shrink(arguments[0], !0),
          i = [o._MESSAGE_TYPEID_CALL, e, r],
          s = 1;
        s < arguments.length;
        s += 1
      )
        i.push(arguments[s]);
      return (
        n._send(i),
        o._debugrpc &&
          ((t._ab_callobj = i),
          (t._ab_tid = n._wsuri + "  [" + n._session_id + "][" + e + "]"),
          console.time(t._ab_tid),
          console.info()),
        t.promise.then ? t.promise : t
      );
    }),
    (o.Session.prototype.subscribe = function (e, n) {
      var t = this,
        r = t._prefixes.resolve(e, !0);
      if (!(r in t._subscriptions)) {
        o._debugpubsub &&
          (console.group("WAMP Subscribe"),
          console.info(t._wsuri + "  [" + t._session_id + "]"),
          console.log(e),
          console.log(n),
          console.groupEnd());
        var i = [o._MESSAGE_TYPEID_SUBSCRIBE, e];
        t._send(i), (t._subscriptions[r] = []);
      }
      var s = t._subscriptions[r].indexOf(n);
      if (-1 !== s)
        throw "callback " + n + " already subscribed for topic " + r;
      t._subscriptions[r].push(n);
    }),
    (o.Session.prototype.unsubscribe = function (e, n) {
      var t = this,
        r = t._prefixes.resolve(e, !0);
      if (!(r in t._subscriptions)) throw "not subscribed to topic " + r;
      var i;
      if (void 0 !== n) {
        var s = t._subscriptions[r].indexOf(n);
        if (-1 === s) throw "no callback " + n + " subscribed on topic " + r;
        (i = n), t._subscriptions[r].splice(s, 1);
      } else (i = t._subscriptions[r].slice()), (t._subscriptions[r] = []);
      if (0 === t._subscriptions[r].length) {
        delete t._subscriptions[r],
          o._debugpubsub &&
            (console.group("WAMP Unsubscribe"),
            console.info(t._wsuri + "  [" + t._session_id + "]"),
            console.log(e),
            console.log(i),
            console.groupEnd());
        var c = [o._MESSAGE_TYPEID_UNSUBSCRIBE, e];
        t._send(c);
      }
    }),
    (o.Session.prototype.publish = function () {
      var e = this,
        n = arguments[0],
        t = arguments[1],
        r = null,
        i = null,
        s = null,
        c = null;
      if (arguments.length > 3) {
        if (!(arguments[2] instanceof Array)) throw "invalid argument type(s)";
        if (!(arguments[3] instanceof Array)) throw "invalid argument type(s)";
        (i = arguments[2]),
          (s = arguments[3]),
          (c = [o._MESSAGE_TYPEID_PUBLISH, n, t, i, s]);
      } else if (arguments.length > 2)
        if ("boolean" == typeof arguments[2])
          (r = arguments[2]), (c = [o._MESSAGE_TYPEID_PUBLISH, n, t, r]);
        else {
          if (!(arguments[2] instanceof Array))
            throw "invalid argument type(s)";
          (i = arguments[2]), (c = [o._MESSAGE_TYPEID_PUBLISH, n, t, i]);
        }
      else c = [o._MESSAGE_TYPEID_PUBLISH, n, t];
      o._debugpubsub &&
        (console.group("WAMP Publish"),
        console.info(e._wsuri + "  [" + e._session_id + "]"),
        console.log(n),
        console.log(t),
        null !== r
          ? console.log(r)
          : null !== i && (console.log(i), null !== s && console.log(s)),
        console.groupEnd()),
        e._send(c);
    }),
    (o.Session.prototype.authreq = function (e, n) {
      return this.call("http://api.wamp.ws/procedure#authreq", e, n);
    }),
    (o.Session.prototype.authsign = function (e, n) {
      return (
        n || (n = ""), CryptoJS.HmacSHA256(e, n).toString(CryptoJS.enc.Base64)
      );
    }),
    (o.Session.prototype.auth = function (e) {
      return this.call("http://api.wamp.ws/procedure#auth", e);
    }),
    (o._connect = function (n) {
      var t = new o.Session(
        n.wsuri,
        function () {
          (n.connects += 1), (n.retryCount = 0), n.onConnect(t);
        },
        function (t, r) {
          var i = null;
          switch (t) {
            case o.CONNECTION_CLOSED:
              n.onHangup(t, "Connection was closed properly [" + r + "]");
              break;
            case o.CONNECTION_UNSUPPORTED:
              n.onHangup(t, "Browser does not support WebSocket.");
              break;
            case o.CONNECTION_UNREACHABLE:
              (n.retryCount += 1),
                0 === n.connects
                  ? n.onHangup(t, "Connection could not be established.")
                  : n.retryCount <= n.options.maxRetries
                  ? ((i = n.onHangup(
                      o.CONNECTION_UNREACHABLE_SCHEDULED_RECONNECT,
                      "Connection unreachable - scheduled reconnect to occur in " +
                        n.options.retryDelay / 1e3 +
                        " second(s) - attempt " +
                        n.retryCount +
                        " of " +
                        n.options.maxRetries +
                        ".",
                      {
                        delay: n.options.retryDelay,
                        retries: n.retryCount,
                        maxretries: n.options.maxRetries,
                      }
                    )),
                    i
                      ? (o._debugconnect &&
                          console.log(
                            "Connection unreachable - retrying stopped by app"
                          ),
                        n.onHangup(
                          o.CONNECTION_RETRIES_EXCEEDED,
                          "Number of connection retries exceeded."
                        ))
                      : (o._debugconnect &&
                          console.log(
                            "Connection unreachable - retrying (" +
                              n.retryCount +
                              ") .."
                          ),
                        e.setTimeout(function () {
                          o._connect(n);
                        }, n.options.retryDelay)))
                  : n.onHangup(
                      o.CONNECTION_RETRIES_EXCEEDED,
                      "Number of connection retries exceeded."
                    );
              break;
            case o.CONNECTION_LOST:
              (n.retryCount += 1),
                n.retryCount <= n.options.maxRetries
                  ? ((i = n.onHangup(
                      o.CONNECTION_LOST_SCHEDULED_RECONNECT,
                      "Connection lost - scheduled " +
                        n.retryCount +
                        "th reconnect to occur in " +
                        n.options.retryDelay / 1e3 +
                        " second(s).",
                      {
                        delay: n.options.retryDelay,
                        retries: n.retryCount,
                        maxretries: n.options.maxRetries,
                      }
                    )),
                    i
                      ? (o._debugconnect &&
                          console.log(
                            "Connection lost - retrying stopped by app"
                          ),
                        n.onHangup(
                          o.CONNECTION_RETRIES_EXCEEDED,
                          "Connection lost."
                        ))
                      : (o._debugconnect &&
                          console.log(
                            "Connection lost - retrying (" +
                              n.retryCount +
                              ") .."
                          ),
                        e.setTimeout(function () {
                          o._connect(n);
                        }, n.options.retryDelay)))
                  : n.onHangup(
                      o.CONNECTION_RETRIES_EXCEEDED,
                      "Connection lost."
                    );
              break;
            default:
              throw "unhandled close code in ab._connect";
          }
        },
        n.options
      );
    }),
    (o.connect = function (e, n, t, r) {
      var i = {};
      if (
        ((i.wsuri = e),
        r ? (i.options = r) : (i.options = {}),
        void 0 === i.options.retryDelay && (i.options.retryDelay = 5e3),
        void 0 === i.options.maxRetries && (i.options.maxRetries = 10),
        void 0 === i.options.skipSubprotocolCheck &&
          (i.options.skipSubprotocolCheck = !1),
        void 0 === i.options.skipSubprotocolAnnounce &&
          (i.options.skipSubprotocolAnnounce = !1),
        !n)
      )
        throw "onConnect handler required!";
      (i.onConnect = n),
        t
          ? (i.onHangup = t)
          : (i.onHangup = function (e, n, t) {
              o._debugconnect && console.log(e, n, t);
            }),
        (i.connects = 0),
        (i.retryCount = 0),
        o._connect(i);
    }),
    (o.launch = function (e, n, t) {
      o.connect(
        e.wsuri,
        function (t) {
          e.appkey && "" !== e.appkey
            ? t.authreq(e.appkey, e.appextra).then(function (r) {
                var i = null;
                if ("function" == typeof e.appsecret) i = e.appsecret(r);
                else {
                  var s = o.deriveKey(e.appsecret, JSON.parse(r).authextra);
                  i = t.authsign(r, s);
                }
                t.auth(i).then(function (e) {
                  n ? n(t) : o._debugconnect && t.log("Session opened.");
                }, t.log);
              }, t.log)
            : t.authreq().then(function () {
                t.auth().then(function (e) {
                  n ? n(t) : o._debugconnect && t.log("Session opened.");
                }, t.log);
              }, t.log);
        },
        function (e, n, r) {
          t ? t(e, n, r) : o._debugconnect && o.log("Session closed.", e, n, r);
        },
        e.sessionConfig
      );
    }),
    o
  );
}),
  (ab._UA_FIREFOX = new RegExp(".*Firefox/([0-9+]*).*")),
  (ab._UA_CHROME = new RegExp(".*Chrome/([0-9+]*).*")),
  (ab._UA_CHROMEFRAME = new RegExp(".*chromeframe/([0-9]*).*")),
  (ab._UA_WEBKIT = new RegExp(".*AppleWebKit/([0-9+.]*)w*.*")),
  (ab._UA_WEBOS = new RegExp(".*webOS/([0-9+.]*)w*.*")),
  (ab._matchRegex = function (e, n) {
    var o = n.exec(e);
    return o ? o[1] : o;
  }),
  (ab.lookupWsSupport = function () {
    var e = navigator.userAgent;
    if (e.indexOf("MSIE") > -1) {
      if (e.indexOf("MSIE 10") > -1) return [!0, !0, !0];
      if (e.indexOf("chromeframe") > -1) {
        var n = parseInt(ab._matchRegex(e, ab._UA_CHROMEFRAME));
        return n >= 14 ? [!0, !1, !0] : [!1, !1, !1];
      }
      return e.indexOf("MSIE 8") > -1 || e.indexOf("MSIE 9") > -1
        ? [!0, !0, !0]
        : [!1, !1, !1];
    }
    if (e.indexOf("Firefox") > -1) {
      var n = parseInt(ab._matchRegex(e, ab._UA_FIREFOX));
      return n
        ? n >= 7
          ? [!0, !1, !0]
          : n >= 3
          ? [!0, !0, !0]
          : [!1, !1, !0]
        : [!1, !1, !0];
    }
    if (e.indexOf("Safari") > -1 && -1 == e.indexOf("Chrome")) {
      var n = ab._matchRegex(e, ab._UA_WEBKIT);
      return n
        ? e.indexOf("Windows") > -1 && "534+" == n
          ? [!0, !1, !0]
          : e.indexOf("Macintosh") > -1 &&
            ((n = n.replace("+", "").split(".")),
            (535 == parseInt(n[0]) && parseInt(n[1]) >= 24) ||
              parseInt(n[0]) > 535)
          ? [!0, !1, !0]
          : e.indexOf("webOS") > -1
          ? ((n = ab._matchRegex(e, ab._UA_WEBOS).split(".")),
            2 == parseInt(n[0]) ? [!1, !0, !0] : [!1, !1, !1])
          : [!0, !0, !0]
        : [!1, !1, !1];
    }
    if (e.indexOf("Chrome") > -1) {
      var n = parseInt(ab._matchRegex(e, ab._UA_CHROME));
      return n
        ? n >= 14
          ? [!0, !1, !0]
          : n >= 4
          ? [!0, !0, !0]
          : [!1, !1, !0]
        : [!1, !1, !1];
    }
    return e.indexOf("Android") > -1
      ? e.indexOf("Firefox") > -1
        ? [!0, !1, !0]
        : e.indexOf("CrMo") > -1
        ? [!0, !1, !0]
        : e.indexOf("Opera") > -1
        ? [!1, !1, !0]
        : e.indexOf("CrMo") > -1
        ? [!0, !0, !0]
        : [!1, !1, !1]
      : e.indexOf("iPhone") > -1 ||
        e.indexOf("iPad") > -1 ||
        e.indexOf("iPod") > -1
      ? [!1, !1, !0]
      : [!1, !1, !1];
  });
/**
 * @license 3DconnexionJS
 *
 * Copyright (c) 2013-2015 3Dconnexion. All rights reserved.
 * License:
 *   This file is licensed under the terms of the "3Dconnexion
 *   Software Development Kit" license agreement:
 *   http://www.3dconnexion.com/service/software-developer/licence-agreement.html
 *   All rights not expressly granted by 3Dconnexion are reserved.
 * $Revision: 11784 $
 */
var _3Dconnexion = function (e) {
  "use strict";
  (this.version = "0.3.11"),
    (this.client = e),
    (this.session = null),
    (this.defport = 8181),
    (this.connected = !1),
    (this.connexion = null),
    (this._3dcontroller = null),
    (this.viewport = null),
    (this.host = "127.51.68.120"),
    (this.nlRpcUri = null),
    (this.nlResourceUri = null),
    (this._EVENT_TYPEID_RPC = 0),
    (this.V3DK_FIT = 31),
    (this.V3DK_MENU = 30),
    (this.fnUpdate = {
      motion: this.onMotion.bind(this),
      "events.keyPress": this.onKeyPress.bind(this),
      "events.keyRelease": this.onKeyRelease.bind(this),
    }),
    (this.clientFnRead = {
      "view.affine": e.getViewMatrix,
      "view.constructionPlane": e.getConstructionPlane,
      "view.extents": e.getViewExtents,
      "view.fov": e.getFov,
      "view.frustum": e.getViewFrustum,
      "view.perspective": e.getPerspective,
      "view.target": e.getViewTarget,
      "view.rotatable": e.getViewRotatable,
      "model.extents": e.getModelExtents,
      "pivot.position": e.getPivotPosition,
      "hit.lookat": e.getLookAt,
      "selection.empty": e.getSelectionEmpty,
      "selection.extents": e.getSelectionExtents,
      "pointer.position": e.getPointerPosition,
      coordinateSystem: e.getCoordinateSystem,
      "views.front": e.getFrontView,
    }),
    (this.clientFnUpdate = {
      motion: e.putMoving,
      "view.affine": e.putViewMatrix,
      "view.extents": e.putViewExtents,
      "view.fov": e.putFov,
      "view.target": e.putTarget,
      "commands.activeCommand": e.putCommand,
      "pivot.position": e.putPivotPosition,
      "pivot.visible": e.putPivotVisible,
      "hit.lookfrom": e.putLookFrom,
      "hit.direction": e.putLookDirection,
      "hit.aperture": e.putLookAperture,
      "hit.selectionOnly": e.putSelectionOnly,
      "events.keyPress": e.putKeyPress,
      "events.keyRelease": e.putKeyRelease,
    }),
    (this.debug = !1),
    window.hasOwnProperty("_3DCONNEXION_DEBUG") &&
      (this.debug = window._3DCONNEXION_DEBUG);
};
(_3Dconnexion.prototype.connect = function () {
  "use strict";
  var e,
    n,
    o,
    t = this,
    r = this.client,
    i = 1,
    s = new XMLHttpRequest();
  t.debug = true;
  console.log(window.ab.connect);
  if (!r.onConnect) throw "onConnect handler required!";
  // (o = "https://" + t.host + ":" + t.defport + "/3dconnexion/nlproxy"),
  (o = "https://" + t.host + ":" + t.defport + ""),
    (s.onreadystatechange = function () {
      console.log(s.responseText, s, t.host);
      console.log(window.ab);
      if (true || (4 === s.readyState && 200 === s.status)) {
        t.debug && console.log(s.responseText),
          (t.nlRpcUri = "wss://" + t.host + "/3dconnexion#"),
          (t.nlResourceUri = "wss://" + t.host + "/3dconnexion");
        try {
          //(e = JSON.parse(s.responseText).port),
            (e = 8181),
            // (n = "wss://" + t.host + ":" + e),
            (n = "ws://" + t.host + ":" + e),
            (console.log(n)),
            t.debug && console.log("Connecting to " + n + " ..."),
            (window.hasOwnProperty("AUTOBAHN_DEBUG") &&
              window.AUTOBAHN_DEBUG &&
              window.ab.debug(!0, !0, !0)) || true,
            window.ab.connect(
              n,
              function (e) {
                console.log("$success");
                console.log(e);
                console.log("conneciton info stuff: ", t.nlRpcUri, t.nlResourceUri);
                (t.session = e),
                  (t.connected = !0),
                  t.debug && console.log("Connected!"),
                  e.prefix("3dx_rpc", t.nlRpcUri),
                  e.prefix("3dconnexion", t.nlResourceUri),
                  e.prefix("self", window.location.href),
                  t.client.onConnect();
              },
              function (e, n) {
                console.log("$error");
                void 0 !== t.client.onDisconnect && t.client.onDisconnect(n),
                  t.delete3dmouse(),
                  (t.connected = !1),
                  (t.session = null),
                  t.debug && console.log("Socket closed!", n);
              },
              { maxRetries: 3, retryDelay: 500 }
            );
            console.log('Connection method run');
        } catch (o) {
          console.error(o);
        }
      }
    }),
    (s.onerror = function () {
      t.debug &&
        console.log(
          "_3Dconnexion.connect: No response from local 3dmouse server " + o
        );
    }),
    (s.ontimeout = function () {
      t.debug &&
        console.log(
          "_3Dconnexion.connect: Timeout querying local 3dmouse server " + o
        );
    });
  try {
    s.open("GET", o, !0),
      s.setRequestHeader("Accept", "application/json; charset=utf-8"),
      (s.msCaching = "disabled"),
      (s.timeout = 0),
      s.send();
  } catch (c) {
    (i = 0), console.error(c.toString());
  }
  return i;
}),
  (_3Dconnexion.prototype.create3dmouse = function (e, n) {
    "use strict";
    var o = this;
    (o.viewport = e),
      o.debug && console.log("create3dmouse " + o.viewport.id),
      $(o.viewport).on("focus", o.focus.bind(o)),
      $(o.viewport).on("blur", o.blur.bind(o)),
      o.session.call("3dx_rpc:create", "3dconnexion:3dmouse", o.version).then(
        function (e) {
          o.connexion = e.connexion;
          var t = { version: 0, name: n };
          o.session
            .call("3dx_rpc:create", "3dconnexion:3dcontroller", o.connexion, t)
            .then(
              function (e) {
                (o._3dcontroller = e.instance),
                  o.session.subscribe(
                    "3dconnexion:3dcontroller/" + o._3dcontroller,
                    o.onEvent.bind(o)
                  ),
                  document.hasFocus() &&
                    (document.activeElement === document.body ||
                    null === document.activeElement
                      ? (o.viewport.focus(), window === o.viewport && o.focus())
                      : (document.activeElement === o.viewport ||
                          $(o.viewport).find(document.activeElement).length >
                            0) &&
                        (o.focus(),
                        o.debug && console.log("self.viewport has focus")));
              },
              function (e) {
                console.log("3dx_rpc:create 3dconnexion:3dcontroller " + e);
              }
            );
        },
        function (e) {
          console.log("3dx_rpc:create " + e);
        }
      );
  }),
  (_3Dconnexion.prototype.blur = function () {
    "use strict";
    var e = this;
    e.debug && console.log("blur on "),
      e.session && e._3dcontroller && e.update3dcontroller({ focus: !1 });
  }),
  (_3Dconnexion.prototype.focus = function () {
    "use strict";
    var e = this;
    e.debug && console.log("focus on "),
      e.session && e._3dcontroller && e.update3dcontroller({ focus: !0 });
  }),
  (_3Dconnexion.prototype.onKeyPress = function (e) {
    "use strict";
    var n = this;
    n.debug && console.log("onKeyPress " + e);
  }),
  (_3Dconnexion.prototype.onKeyRelease = function (e) {
    "use strict";
    var n = this;
    n.debug && console.log("onKeyRelease " + e);
  }),
  (_3Dconnexion.prototype.onMotion = function (e) {
    "use strict";
    var n = this;
    e === !0
      ? void 0 !== n.client.onStartMotion && n.client.onStartMotion()
      : void 0 !== n.client.onStopMotion && n.client.onStopMotion();
  }),
  (_3Dconnexion.prototype.onEvent = function (e, n) {
    "use strict";
    var o = this,
      t = null,
      r = null,
      i = null;
    if (
      (o.debug && (console.log(e), console.log(n)),
      n[0] === window.ab._MESSAGE_TYPEID_CALL)
    ) {
      if ("self:read" === n[2]) {
        if (((r = o.clientFnRead[n[4]]), void 0 === r))
          return (
            (i = [
              window.ab._MESSAGE_TYPEID_CALL_ERROR,
              n[1],
              n[2] + "#generic",
              n[4] + " unknown property",
            ]),
            void o.session._send(i)
          );
        t = r.bind(o.client)();
      } else {
        if ("self:update" !== n[2])
          return (
            (i = [
              window.ab._MESSAGE_TYPEID_CALL_ERROR,
              n[1],
              n[2] + "#generic",
              "unknown procedure",
            ]),
            void o.session._send(i)
          );
        if (((r = o.fnUpdate[n[4]]), void 0 !== r)) t = r(n[5]);
        else {
          if (((r = o.clientFnUpdate[n[4]]), void 0 === r))
            return (
              (i = [
                window.ab._MESSAGE_TYPEID_CALL_ERROR,
                n[1],
                n[2] + "#generic",
                n[4] + " unknown property",
              ]),
              void o.session._send(i)
            );
          t = r.bind(o.client)(n[5]);
        }
      }
      (i = [window.ab._MESSAGE_TYPEID_CALL_RESULT, n[1], t]),
        o.session._send(i);
    }
  }),
  (_3Dconnexion.prototype.read3dcontroller = function (e, n) {
    "use strict";
    var o = this;
    o.debug && console.log("read3dcontroller " + o._3dcontroller);
    try {
      o.session
        .call("3dx_rpc:read", "3dconnexion:3dcontroller/" + o._3dcontroller, e)
        .then(
          function (e) {
            n && n(e);
          },
          function (n) {
            console.log(
              "3dx_rpc:read 3dconnexion:3dcontroller/" +
                o._3dcontroller +
                " " +
                e +
                " " +
                n
            );
          }
        );
    } catch (t) {
      console.error(t);
    }
  }),
  (_3Dconnexion.prototype.update3dcontroller = function (e) {
    "use strict";
    var n = this;
    n.debug && console.log("update3dmouse " + n._3dcontroller);
    try {
      n.session
        .call(
          "3dx_rpc:update",
          "3dconnexion:3dcontroller/" + n._3dcontroller,
          e
        )
        .then(
          function (e) {},
          function (e) {
            console.log(
              "3dx_rpc:update 3dconnexion:3dcontroller/" +
                n._3dcontroller +
                " " +
                e
            );
          }
        );
    } catch (o) {
      console.error(o);
    }
  }),
  (_3Dconnexion.prototype.delete3dmouse = function () {
    "use strict";
    var e = this,
      n = e.connexion;
    e.debug && console.log("delete3dmouse "),
      (e.connexion = null),
      (e._3dcontroller = null),
      null !== e.viewport &&
        ($(e.viewport).off("focus"), $(e.viewport).off("blur")),
      e.session &&
        e.session.call("3dx_rpc:delete", "3dconnexion:3dmouse/" + n).then(
          function (o) {
            e.debug && console.log("deleted connexion " + n);
          },
          function (e) {
            console.log("3dx_rpc:delete " + n + " " + e);
          }
        );
  });
